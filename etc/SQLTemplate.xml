<SQLTemplate>
<sqls type="oracle">
<sql name="getCurrentDate">
select sysdate from dual
</sql>
<sql name="getAllTables">
select * from tab
</sql>
<sql name="getTableColumns">
select column_name, data_type, data_length, NULLABLE, data_default from user_tab_columns where table_name='?'
</sql>
<sql name="tableSpaceUtilization"><![CDATA[
select f.tablespace_name,a.total,u.used,f.free,round((u.used/a.total)*100)"% used",
round((f.free/a.total)*100) "% Free" 
from
(select tablespace_name, sum(bytes/(1024*1024)) total from dba_data_files group by tablespace_name) a,
(select tablespace_name, round(sum(bytes/(1024*1024))) used from dba_extents group by tablespace_name) u,
(select tablespace_name, round(sum(bytes/(1024*1024))) free from dba_free_space group by tablespace_name) f
WHERE a.tablespace_name = f.tablespace_name
and a.tablespace_name = u.tablespace_name
]]></sql>
<sql name="findTopSql"><![CDATA[
SELECT *
FROM   (SELECT Substr(a.sql_text,1,50) sql_text,
               Trunc(a.disk_reads/Decode(a.executions,0,1,a.executions)) reads_per_execution, 
               a.buffer_gets, 
               a.disk_reads, 
               a.executions, 
               a.sorts,
               a.address
        FROM   v$sqlarea a
        ORDER BY 2 DESC)
WHERE  rownum <= 10
]]></sql>
<sql name="findTopCpuSession"><![CDATA[
SELECT * FROM
select * from
(select sid, value from v$sesstat where statistic#=12 order by value desc) where rownum <= 10;
]]></sql>
<sql name="findTopSortSession"><![CDATA[
select /*+ RULE */ v.sid,v.serial#,v.username,v.osuser,v.machine, v.status,v.last_call_et/3600,tablespace,blocks*8192/1024/1024/1000 "size (GB)"
from v$session v,v$sort_usage s
where v.saddr=s.session_addr and (blocks*8192/1024/1024/1000) > 0.5
order by 9 desc
]]></sql>
</sqls>
<sqls type="mysql">
<sql name="getCurrentDate">
select current_date
</sql>
<sql name="getCurrentVersion">
select version()
</sql>
<sql name="showDatabases">
show databases
</sql>
<sql name="showTables">
show tables
</sql>
<sql name="showGrant">
show grants
</sql>
<sql name="showTableDefinition">
show create table [table_name];
</sql>
<sql name="showColumnsDefinition">
show full columns from [table_name];
</sql>
<sql name="getTableStructure">
describe [tablename]
</sql>
<sql name="showVariables">
show variables like 'char%';
</sql>
<sql name="updateWFUserEmail">
update wfuser set email='fanyamin@china.com' where username='fym'
</sql>
</sqls>
<sqls type="sqlite">
<sql name="getAllTables">
SELECT * FROM sqlite_master
WHERE type='table'
ORDER BY name;
</sql>
<sql name="alterTable">
BEGIN TRANSACTION;
CREATE TEMPORARY TABLE t1_backup(a,b);
INSERT INTO t1_backup SELECT a,b FROM t1;
DROP TABLE t1;
CREATE TABLE t1(a,b);
INSERT INTO t1 SELECT a,b FROM t1_backup;
DROP TABLE t1_backup;
COMMIT;
</sql>
</sqls>
<sqls type="wfdb">
<sql name="getAllModuleList">
select a.moduleID, a.moduleName, a.description, a.moduleLink,
		a.parentModuleID from wfmodule a, wfprivilege b where
		a.moduleid=b.moduleid and b.roleid = 1
</sql>
<sql name="getModuleList">
select a.moduleID, a.moduleName, a.description, a.moduleLink,
    a.parentModuleID , ifnull(b.roleid,0) as modulestatus 
    from wfmodule a  left join wfprivilege b on 
    a.moduleid=b.moduleid and b.roleid=1
</sql>
<sql name="getUsers">
select * from wfuser
</sql>
<sql name="getRoles">
select * from wfrole
</sql>
<sql name="getTaskList">
select * from wftask
</sql>

</sqls>
</SQLTemplate>
